# Generated by Django 4.1.3 on 2022-12-01 07:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import management.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('employee', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hr',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('employee_Id', models.CharField(max_length=12)),
                ('joining_date', models.DateField()),
                ('position', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], max_length=20)),
                ('member_of', models.CharField(max_length=20)),
                ('guardian_name', models.CharField(max_length=20)),
                ('alternate_contact', models.IntegerField()),
                ('religion', models.CharField(max_length=10)),
                ('blood_group', models.CharField(max_length=5)),
                ('Permanent_address', models.CharField(max_length=100)),
                ('current_address', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('previous_organisation', models.CharField(max_length=30)),
                ('previous_position', models.CharField(max_length=40)),
                ('previous_salary', models.CharField(max_length=10)),
                ('previous_joining_letter', models.CharField(max_length=100)),
                ('relieving_letter', models.ImageField(blank=True, null=True, upload_to='')),
                ('reason_of_relieving', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Hr',
                'verbose_name_plural': 'Hr',
                'db_table': 'Hr',
            },
            bases=('employee.user', models.Model),
            managers=[
                ('objects', management.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('employee_Id', models.CharField(max_length=12)),
                ('joining_date', models.DateField()),
                ('position', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], max_length=20)),
                ('member_of', models.CharField(max_length=20)),
                ('guardian_name', models.CharField(max_length=20)),
                ('alternate_contact', models.IntegerField()),
                ('religion', models.CharField(max_length=10)),
                ('blood_group', models.CharField(max_length=5)),
                ('Permanent_address', models.CharField(max_length=100)),
                ('current_address', models.CharField(max_length=100)),
                ('remark', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('previous_organisation', models.CharField(max_length=30)),
                ('previous_position', models.CharField(max_length=40)),
                ('previous_salary', models.CharField(max_length=10)),
                ('previous_joining_letter', models.CharField(max_length=100)),
                ('relieving_letter', models.ImageField(blank=True, null=True, upload_to='')),
                ('reason_of_relieving', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'Manager',
                'verbose_name_plural': 'Manager',
                'db_table': 'Manager',
            },
            bases=('employee.user', models.Model),
            managers=[
                ('objects', management.manager.UserManager()),
            ],
        ),
    ]
